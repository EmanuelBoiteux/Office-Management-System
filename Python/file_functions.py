def createStructure(file):
    """
    This function reads the output file generated by the C program and creates a dictionary with the received information.
    Each key in the dictionary represents a floor of the building, and each value is another dictionary where keys are
    office numbers on that floor, and values are lists of people with HIGH priority in that office. It returns a tuple with 
    the generated dictionary and offices where there is more than one person with high priority.
    """
    building = {}
    file = open(file, "r")
    conflicts = []
    for line in file:
        line = line.split(' ')
        floor = line[0]
        office = line[1]
        person = line[2]
        priority = int(line[3][:-1])
        
        if floor not in building: # new floor entry in the building
            if person == 'NOBODY':
               building[floor] = {'0': []}
            elif priority == 1:
                building[floor] = {'0': [person]}
            else:
                building[floor] = {'0': []}
        else: # floor already exists in the building
            if person == 'NOBODY':
                if office not in building[floor]:
                    building[floor][office] = []
            else:
                if office not in building[floor] and priority == 1:
                    building[floor][office] = [person]
                elif office in building[floor] and priority == 1:
                    building[floor][office].append(person)
                    if len(building[floor][office]) > 1: # get offices with more than one person with priority 1
                        conflicts.append((floor, office))
            
    
    file.close()
    return (building, conflicts)


def generateOutput(building, output_file):
    """
    This function takes an output file and the building, and writes the information about the building to the file
    for those people with HIGH priority who were successfully placed. If an office is empty, it indicates EMPTY.
    """
    output = open(output_file, "w")
    output.write("High-priority individuals who will attend the Institute\nFloor - Office - Person/EMPTY\n")

    for floor in building:
        for office in building[floor]:
            if len(building[floor][office]) == 1:
                output.write(f"{floor} {office} {building[floor][office][0]}\n")
            else:
                output.write(f"{floor} {office} EMPTY\n")

    output.close()